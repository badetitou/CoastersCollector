name: CI

on:
  push:
    branches: 
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROJECT_NAME: PharoLanguageServer
    strategy:
      matrix:
        smalltalk: [ Moose64-9.0]
    name: ${{ matrix.smalltalk }}
    steps:
      - uses: actions/checkout@v2
      
      - uses: hpi-swa/setup-smalltalkCI@v1
        with:
          smalltalk-image: ${{ matrix.smalltalk }}
      
      - run: smalltalkci -s ${{ matrix.smalltalk }}
        shell: bash
        timeout-minutes: 15

      - name: Build meta-model planuml image
        run: |
          $SMALLTALK_CI_VM  $SMALLTALK_CI_IMAGE eval "'coaster.puml' asFileReference writeStreamDo: [ :stream | stream nextPutAll:  (FamixMMUMLDocumentor new model: CCModel; beWithStub; generatePlantUMLModel)]."
          $SMALLTALK_CI_VM  $SMALLTALK_CI_IMAGE eval "'coasterExtended.puml' asFileReference writeStreamDo: [ :stream | stream nextPutAll:  (FamixMMUMLDocumentor new model: CCEModel; beWithStub; generatePlantUMLModel)]."
          $SMALLTALK_CI_VM  $SMALLTALK_CI_IMAGE eval "'world.puml' asFileReference writeStreamDo: [ :stream | stream nextPutAll:  (FamixMMUMLDocumentor new model: WModel; beWithStub; generatePlantUMLModel)]."
          $SMALLTALK_CI_VM  $SMALLTALK_CI_IMAGE eval "'connect.puml' asFileReference writeStreamDo: [ :stream | stream nextPutAll:  (FamixMMUMLDocumentor new model: CMModel; beWithStub; generatePlantUMLModel)]."
      
      - name: Generate Coaster PNG Diagrams
        uses: cloudbees/plantuml-github-action@master
        with:
            args: -v -tpng coaster.puml
     
      - name: Generate Coaster Extended Diagrams
        uses: cloudbees/plantuml-github-action@master
        with:
            args: -v -tpng coasterExtended.puml

      - name: Generate World Diagrams
        uses: cloudbees/plantuml-github-action@master
        with:
            args: -v -tpng world.puml
            
      - name: Generate Connect Diagrams
        uses: cloudbees/plantuml-github-action@master
        with:
            args: -v -tpng connect.puml
            
      - name: Move artifact
        run: |
          mkdir doc-uml
          mv *.png doc-uml
      
      - name: Init new repo in dist folder and commit generated files
        run: |
          cd doc-uml/
          git init
          git add -A
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m 'update doc'
          
      # Careful, this can kill your project
      - name: Force push to destination branch
        uses: ad-m/github-push-action@v0.5.0
        with:
          # Token for the repo. Can be passed in using $\{{ secrets.GITHUB_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          # Destination branch to push changes
          branch: v1/doc
          # We have to push from the folder where files were generated.
          # Same were the new repo was initialized in the previous step
          directory: ./doc-uml
